{
	"name": "df_gold_dim_rbs",
	"properties": {
		"folder": {
			"name": "Gold"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sql_silver_datos",
						"type": "DatasetReference"
					},
					"name": "RadioBaseDatos"
				},
				{
					"dataset": {
						"referenceName": "ds_sql_silver_llamadas",
						"type": "DatasetReference"
					},
					"name": "rbsA"
				},
				{
					"dataset": {
						"referenceName": "ds_sql_silver_llamadas",
						"type": "DatasetReference"
					},
					"name": "rbsB"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_gold_dim_rbs",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "union1"
				},
				{
					"name": "union2"
				},
				{
					"name": "filter1"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          rbs_utilizada as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select DISTINCT rbs_utilizada from silver.datos',",
				"     format: 'query') ~> RadioBaseDatos",
				"source(output(",
				"          rbs_utilizada as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select DISTINCT rbs_utilizada_a as rbs_utilizada from silver.llamadas',",
				"     format: 'query') ~> rbsA",
				"source(output(",
				"          rbs_utilizada as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'select DISTINCT rbs_utilizada_b as rbs_utilizada from silver.llamadas',",
				"     format: 'query') ~> rbsB",
				"RadioBaseDatos, rbsA union(byName: true)~> union1",
				"union1, rbsB union(byName: true)~> union2",
				"union2 filter(!isNull(rbs_utilizada)) ~> filter1",
				"filter1 aggregate(groupBy(rbs_utilizada),",
				"     each(match(name != 'rbs_utilizada'), $$ = first($$))) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          id_radiobase as integer,",
				"          radiobase as string,",
				"          celda as string,",
				"          latitud as decimal(10,7),",
				"          longitud as decimal(10,7)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          radiobase = rbs_utilizada",
				"     )) ~> sink1"
			]
		}
	}
}